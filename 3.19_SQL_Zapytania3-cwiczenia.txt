create table Test(id integer, title varchar(100));
insert into Test(id, title) values(1, "Hello");
select * from Test;
-- Your code here!
CREATE DATABASE zapytania_zuzelski;
USE zapytania_zuzelski;

CREATE TABLE pracownicy
(
id INT PRIMARY KEY AUTO_INCREMENT,
imie VARCHAR(30) NOT NULL,
drugie_imie VARCHAR(30) NOT NULL,
nazwisko VARCHAR(30) NOT NULL,
placa FLOAT(15) NOT NULL,
stanowisko VARCHAR(30) NOT NULL,
pesel CHAR(11),
miasto CHAR(25),
data_ur CHAR(15)
);


CREATE TABLE stanowiska
(
id_stanowiska INT PRIMARY KEY AUTO_INCREMENT, 
nazwa VARCHAR(20) UNIQUE NOT NULL,
pensja DECIMAL(7,2) NOT NULL
);

INSERT INTO stanowiska(nazwa, pensja)
VALUES ("kierownik", 4000.00);
INSERT INTO stanowiska(nazwa, pensja)
VALUES ("asystent", 3200.00);
INSERT INTO stanowiska(nazwa, pensja)
VALUES ("sekretarka", 2500.00);
INSERT INTO stanowiska(nazwa, pensja)
VALUES ("pracownik", 2800.00);
INSERT INTO stanowiska(nazwa, pensja)
VALUES ("kierowca", 2700.00);

INSERT INTO pracownicy
VALUES (1, "Adam","Karol", "Kowalski", "1624.50", "Magazynier", "85121201234","Gdańsk","1999-02-03");
INSERT INTO pracownicy
VALUES (2, "Adam","Michal", "Nowak", "3760.00", "Kierownik", "90010111234","Gdańsk","1999-02-03");
INSERT INTO pracownicy
VALUES (3, "Andrzej","Milosz", "Kowalski", "4200.00", "Kierownik", "82020209876","Gdańsk","1954-02-03");
INSERT INTO pracownicy
VALUES (4, "Arkadiusz","Adam", "Malinowski", "1600.00", "Kierowca", "93110212345","Sopot","1963-02-03");
INSERT INTO pracownicy
VALUES (5, "Andrzej","Daniel", "Malinowski", "1450.00", "Sprzedawca", "","Gdańsk","1999-02-03");
INSERT INTO pracownicy
VALUES (6, "Krzysztof","Hubert", "Nowicki", "1300.00", "Sprzedawca", "","Gdańsk","1967-07-03");
INSERT INTO pracownicy
VALUES (7, "Kacper","Grzegorz", "Adamczyk", "1610.50", "Serwisant", "92090912468","Sopot","1999-11-03");
INSERT INTO pracownicy
VALUES (8, "Kamil","Kuba", "Andrzejczak", "1200.00", "Asystent","","Sopot","1989-02-03");
INSERT INTO pracownicy
VALUES(9, "Katarzyna","Magda", "Paciorek", "1.00", "brak","213742069","Choroszcz","1410-07-15");
INSERT INTO pracownicy
VALUES(10,"Grzegorz","Ramen", "Szulist", "5000", "Kierowca","56458956281","Brzęczyszczykowo","2010-02-27");
INSERT INTO pracownicy
VALUES(11,"Kuba","Paweł", "Zuzelski", "2000", "Śmieciarz","56281647281","Parowo","2015-05-29");


SELECT * FROM pracownicy;

SELECT imie, nazwisko, stanowisko FROM pracownicy;
SELECT imie, nazwisko, placa AS wynagrodzenie FROM pracownicy;
SELECT * FROM pracownicy ORDER BY nazwisko ASC;
SELECT * FROM pracownicy ORDER BY nazwisko DESC;
SELECT * FROM pracownicy ORDER BY nazwisko ASC, placa DESC;
SELECT * FROM pracownicy WHERE nazwisko="Kowalski";
SELECT * FROM pracownicy WHERE placa < 1500;
SELECT * FROM pracownicy WHERE id BETWEEN 4 And 8;
SELECT * FROM pracownicy WHERE placa BETWEEN 1500 AND 1700 ORDER BY placa;
SELECT * FROM pracownicy WHERE id = 4 OR id = 6 OR id = 8;
SELECT * FROM pracownicy WHERE id IN(4, 6, 8);
SELECT * FROM pracownicy WHERE imie LIKE "K%";
SELECT id, imie, nazwisko FROM pracownicy WHERE pesel IS NULL;
SELECT * FROM pracownicy WHERE placa > 1500 AND stanowisko <> "kierownik" AND pesel IS NOT NULL;
SELECT DISTINCT nazwisko FROM pracownicy ORDER BY nazwisko;


SELECT * FROM pracownicy WHERE stanowisko="Kierownik";
SELECT * FROM pracownicy WHERE imie LIKE "A%";
SELECT * FROM pracownicy WHERE nazwisko NOT LIKE "%i";
SELECT * FROM pracownicy WHERE nazwisko LIKE "%c%";
SELECT * FROM pracownicy WHERE stanowisko LIKE "S%";
SELECT * FROM pracownicy WHERE nazwisko LIKE "A%" OR nazwisko LIKE "M%";

SELECT nazwisko, placa FROM pracownicy WHERE placa > 1600;
SELECT * FROM pracownicy WHERE mod(id, 2);
SELECT imie, nazwisko FROM pracownicy WHERE stanowisko="Sprzedawca" ORDER BY nazwisko ASC;
SELECT * FROM pracownicy WHERE stanowisko NOT LIKE "Sprzedawca" AND pesel IS NOT NULL AND placa > 2000;
SELECT nazwisko, placa FROM pracownicy ORDER BY placa DESC;
SELECT nazwisko, placa  FROM pracownicy ORDER BY placa DESC LIMIT 3;
SELECT nazwisko, placa  FROM pracownicy ORDER BY placa ASC LIMIT 3;
SELECT DISTINCT stanowisko FROM pracownicy;

/* zadanie 19.2 */
SELECT COUNT(*) FROM pracownicy;
SELECT COUNT(*) FROM pracownicy WHERE stanowisko='sprzedawca';
SELECT COUNT(*) AS "Liczba sprzedawców" FROM pracownicy
WHERE stanowisko='sprzedawca';
SELECT AVG(placa) AS 'Średnie wynagrodzenie' FROM pracownicy;
SELECT MAX(placa) AS 'Najwyższe wynagrodzenie' FROM pracownicy;

SELECT MAX(placa) AS "Najwyższe wynagrodzenie", MIN(placa) 
AS "Najniższe wynagrodzenie" FROM pracownicy WHERE stanowisko='magazynier';

SELECT SUM(placa) AS "Suma płac" FROM pracownicy;
SELECT stanowisko, AVG(placa) AS "Średnia płaca" FROM pracownicy
GROUP BY stanowisko ORDER BY "Średnia płaca"DESC;

SELECT stanowisko, COUNT(*) AS "Liczba pracowników" FROM pracownicy
WHERE pesel IS NOT NULL GROUP BY stanowisko ORDER BY stanowisko;

SELECT stanowisko, nazwisko, COUNT(*) AS "Liczba pracowników" FROM pracownicy
GROUP BY stanowisko, nazwisko ORDER BY stanowisko, nazwisko;

SELECT stanowisko, AVG(placa) AS "Średnia płaca" FROM pracownicy 
GROUP BY stanowisko HAVING AVG(placa) > 1600 ORDER BY "Średnia płaca" DESC;

SELECT MIN(placa) FROM pracownicy;
SELECT stanowisko ,COUNT(*) FROM pracownicy WHERE stanowisko="magazynier";

SELECT AVG(placa) FROM pracownicy;
SELECT MAX(placa) FROM pracownicy WHERE stanowisko="sprzedawca";
SELECT MIN(placa) FROM pracownicy WHERE stanowisko="sprzedawca";
SELECT AVG(placa) FROM pracownicy WHERE stanowisko="sprzedawca";
SELECT SUM(placa) FROM pracownicy WHERE stanowisko="sprzedawca";

SELECT AVG(placa) FROM pracownicy GROUP BY imie;
SELECT MAX(placa), imie FROM pracownicy GROUP BY imie;
SELECT SUM(placa) FROM pracownicy;
SELECT COUNT(stanowisko),stanowisko FROM pracownicy GROUP BY stanowisko ORDER BY stanowisko ASC;
SELECT  stanowisko,MAX(placa) , MIN(placa) , AVG(placa) FROM pracownicy GROUP BY stanowisko;

/* zadanie 3 */
SELECT imie, nazwisko, miasto FROM pracownicy;
SELECT imie, nazwisko, placa FROM pracownicy;
SELECT imie, nazwisko, placa FROM pracownicy;
SELECT imie, nazwisko, miasto FROM pracownicy WHERE miasto="Sopot";
SELECT imie, nazwisko, miasto FROM pracownicy WHERE miasto<>"Sopot";
SELECT imie, nazwisko, data_ur FROM pracownicy ORDER BY data_ur ASC;
SELECT imie, nazwisko, data_ur FROM pracownicy ORDER BY data_ur DESC;
SELECT * FROM pracownicy ORDER BY nazwisko ASC, data_ur DESC;
SELECT imie, nazwisko, data_ur FROM pracownicy WHERE data_ur<"1980-01-01";
SELECT imie, nazwisko, data_ur FROM pracownicy
WHERE data_ur>'1960-01-01' AND data_ur<'1969-12-31';
SELECT imie, nazwisko, pensja AS wynagrodzenie FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT COUNT(*) FROM pracownicy;
SELECT COUNT(*) AS "Liczba pracowników" FROM pracownicy;
SELECT miasto, COUNT(*) FROM pracownicy GROUP BY miasto;
SELECT nazwa, COUNT(*) FROM pracownicy, stanowiska 
WHERE stanowisko=stanowiska.id_stanowiska
GROUP BY stanowisko;
SELECT SUM(pensja) FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT SUM(pensja) AS "Suma zarobków" FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT miasto, SUM(pensja) FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska GROUP BY miasto;
SELECT nazwa, SUM(pensja) FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska
GROUP BY stanowisko;
SELECT AVG(pensja) FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT AVG(pensja) AS "Średnie wynagrodzenie" FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT MAX(pensja) FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT MAX(pensja) AS "Maksymalne wynagrodzenie" FROM pracownicy, stanowiska
WHERE stanowisko=stanowiska.id_stanowiska;
SELECT COUNT(*) FROM pracownicy WHERE imie LIKE '%a';
SELECT COUNT(*) FROM pracownicy WHERE imie NOT LIKE '%a';

SELECT stanowisko, COUNT(*) FROM pracownicy
GROUP BY stanowisko;

SELECT nazwa, pensja FROM stanowiska HAVING pensja > 2500 ;

Select imie ,DATEDIFF(NOW(),data_ur)/365 FROM pracownicy;

/* zadanie 21.1*/
SELECT *
FROM pracownicy CROSS JOIN stanowiska;
SELECT *
FROM stanowiska CROSS JOIN pracownicy;
SELECT imie, nazwisko, nazwa, pensja
FROM pracownicy CROSS JOIN stanowiska;
SELECT imie, nazwisko, nazwa, pensja
FROM stanowiska CROSS JOIN pracownicy;
SELECT imie, nazwisko, nazwa, pensja
FROM pracownicy INNER JOIN stanowiska
ON stanowisko=stanowiska.id_stanowiska;
SELECT imie, nazwisko, nazwa, pensja
FROM pracownicy LEFT OUTER JOIN stanowiska
ON stanowisko=stanowiska.id_stanowiska;
SELECT imie, nazwisko, nazwa, pensja
FROM pracownicy RIGHT OUTER JOIN stanowiska
ON stanowisko=stanowiska.id_stanowiska;
SELECT imie, nazwisko, pesel, nazwa, pensja
FROM pracownicy LEFT OUTER JOIN stanowiska
ON stanowisko=stanowiska.id_stanowiska
WHERE nazwa IS NULL;

/*zadanie 21.2 */
CREATE TABLE Uczelnia_A
(
id INT PRIMARY KEY AUTO_INCREMENT,
imie VARCHAR(30) NOT NULL,
nazwisko VARCHAR(30) NOT NULL,
pesel CHAR(11)
);

INSERT INTO Uczelnia_A
VALUES (1,"Jan", "Kowalski", "01234567890");
INSERT INTO Uczelnia_A
VALUES (2,"Adam", "Nowak", "12345678901");
INSERT INTO Uczelnia_A
VALUES (3,"Anna", "Wilk", "23456789012");

CREATE TABLE Uczelnia_B
(
id INT PRIMARY KEY AUTO_INCREMENT,
imie VARCHAR(30) NOT NULL,
nazwisko VARCHAR(30) NOT NULL,
pesel CHAR(11)
);

INSERT INTO Uczelnia_B
VALUES (1,"Olga", "Wolska", "34567890123");
INSERT INTO Uczelnia_B
VALUES (2,"Beata", "Nowak", "45678901234");
INSERT INTO Uczelnia_B
VALUES (3,"Jan ", "Kowalski", "01234567890");

SELECT imie, nazwisko pesel FROM Uczelnia_A
UNION
SELECT imie, nazwisko pesel FROM Uczelnia_B;
SELECT imie, nazwisko pesel FROM Uczelnia_A
UNION ALL
SELECT imie, nazwisko pesel FROM Uczelnia_B;

SELECT imie,nazwisko FROM pracownicy WHERE imie="A%" AND placa>2000;

/*zadanie 3.22 */
SELECT LCASE (imie) FROM pracownicy;
SELECT UCASE (nazwisko) FROM pracownicy;
SELECT nazwisko, SUBSTRING(nazwisko, 1, 3) FROM pracownicy;
SELECT nazwisko, RIGHT(nazwisko, 1) FROM pracownicy;
SELECT CONCAT (imie," ",nazwisko) FROM pracownicy;
SELECT CONCAT (imie," ",nazwisko," ",LEFT(imie, 1), ".",nazwisko, 1)FROM pracownicy;
SELECT CONCAT (imie," ",nazwisko," ",LEFT(imie, 1), ".",LEFT(nazwisko, 1))FROM pracownicy;
SELECT nazwisko, LENGTH(nazwisko) FROM pracownicy;
SELECT nazwisko, REVERSE(LOWER(nazwisko)) FROM pracownicy;
SELECT imie, nazwisko,LEFT(data_ur,4) FROM pracownicy;
SELECT imie, nazwisko,RIGHT(data_ur,2) FROM pracownicy;
SELECT imie, nazwisko,MID(data_ur,6,2) FROM pracownicy;
SELECT MID(nazwisko,3,5) FROM pracownicy;
SELECT MID(miasto,3) FROM pracownicy;
SELECT drugie_imie, REPLACE(drugie_imie,"a","o") FROM pracownicy;
SELECT imie,nazwisko,CONCAT(REVERSE(imie),REVERSE(nazwisko)) FROM pracownicy;

/*zadanie 3.23 */
CREATE VIEW TWiek AS
SELECT imie,nazwisko,YEAR(CURDATE())-YEAR(data_ur) FROM pracownicy;
SELECT * FROM TWiek;

CREATE VIEW TSredni AS
SELECT YEAR(CURDATE())-ROUND(AVG(data_ur), 0) FROM pracownicy;
SELECT * FROM TSredni;  

CREATE VIEW TMin AS
SELECT YEAR(CURDATE())-MAX(data_ur) FROM pracownicy;
SELECT * FROM TMin;

CREATE VIEW TMax AS
SELECT YEAR(CURDATE())-MIN(data_ur) FROM pracownicy;
SELECT * FROM TMax;

CREATE VIEW TListopad AS
SELECT imie, nazwisko FROM pracownicy WHERE MONTH(data_ur) = "11";
SELECT * FROM TListopad;

CREATE VIEW TLista AS
SELECT nazwisko ="B*" FROM pracownicy WHERE MONTH(data_ur) = "11";
SELECT * FROM TLista;

CREATE VIEW TRok AS 
SELECT imie,nazwisko FROM pracownicy WHERE YEAR(data_ur)=1965;
SELECT * FROM TRok;

CREATE VIEW TLata AS 
SELECT imie,nazwisko FROM pracownicy WHERE YEAR(data_ur)>1959 AND YEAR(data_ur)<1970;
SELECT * FROM TLata;

